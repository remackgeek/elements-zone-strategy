#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build_and_test:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.18.1-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # build library
      - run: npm run build:lib

      # build app
      - run: npm run build:app

      # run lib tests
      - run: npm run test:lib

      # run app tests
      - run: npm run test:app

      # run e2e tests!
      - run: npm run test:e2e

      # upload package
      - store_artifacts:
          path: dist

      # save package for downstream
      - persist_to_workspace:
          root: dist
          paths:
            - elements-zone-strategy

  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.18.1-browsers

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: dist

      # Authenticate with registry
      - run: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc

      # deploy to npm
      - run: npm publish dist/elements-zone-strategy --dry-run

workflows:
  version: 2
  build:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /.*/
      - hold: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires: # We only run the "hold" job when test2 has succeeded
            - build_and_test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - hold
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
